/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/utilities.js */ \"./src/modules/utilities.js\");\n/* harmony import */ var _modules_table_creator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/table_creator.js */ \"./src/modules/table_creator.js\");\n\n\n\n// This step is performed to parse the url to identify the dataset and the default coloring column\nvar query = window.location.search.substring(1);\nvar temp_query = query.split(\"&\");\nvar dicts = {};\nvar tvars, dataset;\nfor(var i=0;i<temp_query.length;i++) {\n  tvars = temp_query[i].split(\"=\");\n  dicts[tvars[0]]=tvars[1].replace(/%20/g, \" \");\n}\nif (\"dataset\" in dicts) {\n  dataset = dicts[\"dataset\"];\n} else {\n  dataset = \"joined_data.csv\";\n}\nvar weights_2darray = [], biases_1darray = [], vocab_1darray = [], vectorspace_2darray = [], bow_2darray = [];\n// Semantic model option set up\nif (\"semantic_model\" in dicts && dicts[\"semantic_model\"] == \"true\") {\n  console.log('Using semantic model.\\nGetting matrices...');\n  var weightsfile = dataset.split(/\\.t[a-z]{2}$/)[0]+'_weights.txt';\n  var biasesfile = dataset.split(/\\.t[a-z]{2}$/)[0]+'_biases.txt';\n  var vocabfile = dataset.split(/\\.t[a-z]{2}$/)[0]+'_vocab.txt';\n  var vectorfile = 'VS-' + dataset.split(\"_semantic\")[0]+'.txt';\n  var bowfile = dataset.split(/\\.t[a-z]{2}$/)[0]+'_bow.txt';\n\n  console.log(\"Reading \" + bowfile);\n  d3.tsv(bowfile, function(text){\n    bow_2darray = text.map( Object.values );\n    bow_2darray = bow_2darray.map(function(entry) {\n      return entry.map(function(elem) {\n        return Math.round(parseFloat(elem));\n      });\n    });\n  });\n  console.log(\"Reading \" + vectorfile);\n  d3.tsv(vectorfile, function(text){\n    vectorspace_2darray = text.map( Object.values );\n    vectorspace_2darray = vectorspace_2darray.map(function(arr) {\n            // username column ends up last in the dictionary, due to alphanumeric sort\n            return arr.slice(0,-1).map(function(elem) {\n              return parseFloat(elem);\n            });\n          });\n  });\n  console.log(\"Reading \" + weightsfile);\n  d3.tsv(weightsfile, function(text){\n    weights_2darray = text.map( Object.values );\n    weights_2darray = weights_2darray.map(function(entry) {\n      return entry.map(function(elem) {\n        return parseFloat(elem);\n      });\n    });\n  });\n  console.log(\"Reading \" + biasesfile);\n  d3.tsv(biasesfile, function(text){\n    biases_1darray = text.map( Object.values );\n    biases_1darray = Object.values(biases_1darray.map(Number));\n  });\n  console.log(\"Reading \" + vocabfile);\n  d3.tsv(vocabfile, function(text){\n    vocab_1darray = text.map( Object.values );\n    vocab_1darray = Object.values(vocab_1darray.map(String));\n  });\n}\n\n/*\n * value accessor - returns the value to encode for a given data object.\n * scale - maps value to a visual display encoding, such as a pixel position.\n * map function - maps from data value to display value\n * axis - sets up axis\n */\n\n// setup x\nvar xValue = function(d) { return d.x;}, // data -> value\n    xScale = d3.scale.linear().range([0, _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"width\"]]), // value -> display\n    xMap = function(d) {return xScale(xValue(d));}, // data -> display\n    xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\n// setup y\nvar yValue = function(d) { return d[\"y\"];}, // data -> value\n    yScale = d3.scale.linear().range([_modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"height\"], 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}, // data -> display\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\n// add the tooltip area to the webpage\nvar tooltip = d3.select(\"body\").append(\"div\")\n.attr(\"class\", \"tooltip\")\n.style(\"opacity\", 0);\n\nvar tooltip1 = d3.select(\"body\").append(\"div\")\n.attr(\"class\", \"tooltip1\")\n.style(\"opacity\", 0);\n\n// to print all the key values pairs of a point (used to display the summary on the webpage)\nvar print_array = function(arr, d) {\n  var x = \"\";\n  for (var i=0; i<arr.length; i++) {\n    x = x + \"<b>\" + arr[i] + \"</b>: \" + d[arr[i]] + \"<br>\"\n  }\n  x = x + d.x + \"<br>\" + d[\"y\"];\n  return x;\n};\n\n// setup fill color\nvar color_column;\n\n// Can generate more with http://jnnnnn.github.io/category-colors-2L-inplace.html if want more\nvar d3_category20_shuffled = [\n\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\",\n\"#aec7e8\", \"#ffbb78\", \"#98df8a\", \"#ff9896\", \"#c5b0d5\", \"#c49c94\", \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\", \"#9edae5\"\n];\n\n// coloring will be done according to the values determined by cValue\nvar cValue = function(d) {return d[color_column];},\ncValue2 = function(d) {return Math.log(parseFloat(d[color_column]));},\ncolor = d3.scale.ordinal().range(d3_category20_shuffled);\n\n// used to search a particular substring in the list of requested feature column\n// used to determine whether we should add find to arri, hence the t/f -> f/t\nvar searchdic = function(arri, find) {\n  for(var i=0;i<arri.length;i++) {\n    if(JSON.stringify(find) === JSON.stringify(arri[i])){\n      return false;\n    }\n  }\n  return true;\n}\n\n// create the dropdown menu\n// Coloring\nvar dropDown = d3.select(\"body\").append(\"select\")\n.attr(\"class\", \"select1\")\n.attr(\"name\", \"color_column\");\n\n// Searching\nvar dropDown1 = d3.select(\"body\").append(\"select\")\n.attr(\"class\", \"select2\")\n.attr(\"name\", \"color_column\");\n\n// Transparent\nvar dropDown2 = d3.select(\"body\").append(\"select\")\n.attr(\"class\", \"select4\")\n.attr(\"name\", \"color_column\");\n\n// Click on feature\nvar dropDown3 = d3.select(\"body\").append(\"select\")\n.attr(\"class\", \"select5\")\n.attr(\"name\", \"color_column\");\n\n// Shaping\nvar dropDown4 = d3.select(\"body\").append(\"select\")\n.attr(\"class\", \"select6\")\n.attr(\"name\", \"color_column\");\n\nvar categories = [];\n// category_search stores the name of column according to which searching is to be done\nvar category_search_data = [];\n// categories stores the name of all the columns\nvar category_search;\n\ncategories.push(\"Select\");\n// check whether the searching column is provided in the url or not\nif (\"search\" in dicts) {\n  category_search = dicts[\"search\"];\n  category_search_data.push(category_search);\n}\n\n\n// color_column stores the name of column according to which coloring is to be done\n// check whether the coloring column is provided in the url or not\nif (\"color\" in dicts) {\n  color_column = dicts[\"color\"];\n  categories.push(color_column);\n} else {\n  color_column = \"Select\";\n}\n\n// categories_copy_color is just the copy of categories\nvar categories_copy_color = [];\ncategories_copy_color.push(color_column);\n\nvar columns = [], temp = [];\nvar x_max, x_min, y_max, y_min;\n\n// column for the transparent value\nvar transparent_column = \"Select\", feature_column = \"\", shaping_column = \"Select\";\n\nconsole.log('Loading main data')\n// getting header from csv file to make drowdown menus\nd3.tsv(dataset, function(data) {\n  console.log(data[0]);\n  temp = Object.keys(data[0]);\n    // remove x and y\n    temp.splice(temp.indexOf('x'), 1);\n    temp.splice(temp.indexOf('y'), 1);\n\n    for(var i=0;i<temp.length;i++)\n      if (temp[i] != category_search) {\n        category_search_data.push(temp[i]);\n      }\n\n      for(var i=0;i<temp.length;i++) {\n        // color_column already pushed\n        if (temp[i] != color_column) {\n          categories.push(temp[i]);\n          categories_copy_color.push(temp[i]);\n        }\n        columns.push(temp[i]);\n      }\n    // check whether the coloring column is provided in the url or not\n    // ?? is this necessary? color_column is already defined with the same procedure outside the function\n    if (\"color\" in dicts) {\n      color_column = categories[1]; // since color would be first, start with next\n    } else {\n      // color_column = \"Select\"\n      color_column = categories[0];\n    }\n    category_search = category_search_data[0];\n    // Searching\n    dropDown1.selectAll(\"option\")\n    .data(category_search_data)\n    .enter()\n    .append(\"option\")\n    .text(function(d) { return d;})\n    .text(function(d) {return d;});\n    // Coloring\n    dropDown.selectAll(\"option\")\n    .data(categories_copy_color)\n    .enter()\n    .append(\"option\")\n    .text(function(d) { return d;})\n    .text(function(d) {return d;});\n    // Transparent\n    dropDown2.selectAll(\"option\")\n    .data(category_search_data)\n    .enter()\n    .append(\"option\")\n    .text(function(d) { return d;})\n    .text(function(d) {return d;});\n    // Click on feature\n    dropDown3.selectAll(\"option\")\n    .data(category_search_data)\n    .enter()\n    .append(\"option\")\n    .text(function(d) { return d;})\n    .text(function(d) {return d;});\n    // Shaping\n    dropDown4.selectAll(\"option\")\n    .data(categories)\n    .enter()\n    .append(\"option\")\n    .text(function(d) { return d;})\n    .text(function(d) {return d;});\n    shaping_column = categories[0];\n    feature_column = category_search_data[0];\n    transparent_column = category_search_data[0];\n  });\n\n// whenever any one of the drowdown menu's selected column is changes the plot is generated according to the value of dropdown menu selected\n// Coloring\ndropDown.on(\"change\", plotting);\n// Searching\ndropDown1.on(\"change\", plotting2);\n// Transparent\ndropDown2.on(\"change\", plotting3);\n// Click on feature\ndropDown3.on(\"change\", plotting4);\n// Shaping\ndropDown4.on(\"change\", plotting5);\n\nif (\"q\" in dicts) {\n  highlighting(dicts[\"q\"], \"\", \"\");\n} else {\n  highlighting(\"\", \"\", \"\");\n}\n\n// the functions to call when the value of dropdown menu is changes\n// Click on feature\nfunction plotting4(){\n  feature_column = d3.event.target.value;\n}\n// Transparent\nfunction plotting3(){\n  transparent_column = d3.event.target.value;\n}\n// Searching\nfunction plotting2(){\n  category_search = d3.event.target.value;\n}\n\n// function to call for change event\n// Coloring\nfunction plotting(){\n  color_column = d3.event.target.value;\n  cValue = function(d) { return d[color_column];};\n  let val_search = document.getElementById(\"searchText\").value;\n  let val_transp = document.getElementById(\"transpText\").value;\n  let val_opacityMatch = document.getElementById(\"opacityMatch\").value;\n  let val_opacityNoMatch = document.getElementById(\"opacityNoMatch\").value;\n  highlighting(val_search, val_transp, val_opacityMatch, val_opacityNoMatch);\n}\n\n// function to call for change event\n// Shaping\nfunction plotting5(){\n  shaping_column = d3.event.target.value;\n  cValue = function(d) { return d[color_column];};\n  let val_search = document.getElementById(\"searchText\").value;\n  let val_transp = document.getElementById(\"transpText\").value;\n  let val_opacityMatch = document.getElementById(\"opacityMatch\").value;\n  let val_opacityNoMatch = document.getElementById(\"opacityNoMatch\").value;\n  highlighting(val_search, val_transp, val_opacityMatch, val_opacityNoMatch);\n}\n\nvar zoomed = 0;\nvar needZoom = false;\nvar needDrawCircle = false;\n\n// search event\n// it will be executed when search button is pressed and points that matches the searched string will be highlighted\nfunction searchEventHandler(event) {\n  console.log(document.getElementById(\"searchText\").value);\n  let val_search = document.getElementById(\"searchText\").value;\n  let val_transp = document.getElementById(\"transpText\").value;\n  let val_opacityMatch = document.getElementById(\"opacityMatch\").value;\n  let val_opacityNoMatch = document.getElementById(\"opacityNoMatch\").value;\n  highlighting(val_search, val_transp, val_opacityMatch, val_opacityNoMatch);\n  return false;\n}\nfunction searchExactMatchEventHandler(event) {\n  if (document.getElementById(\"searchText\").value) searchEventHandler();\n}\n\n// transparent event\n// it will be executed when Transparent button is pressed and points that satisfies the condition will be highlighted\nfunction transparentSearchEventHandler(event) {\n  console.log(document.getElementById(\"transpText\").value);\n  let val_search = document.getElementById(\"searchText\").value;\n  let val_transp = document.getElementById(\"transpText\").value;\n  let val_opacityMatch = document.getElementById(\"opacityMatch\").value;\n  let val_opacityNoMatch = document.getElementById(\"opacityNoMatch\").value;\n  highlighting(val_search, val_transp, val_opacityMatch, val_opacityNoMatch);\n  return false;\n}\nfunction handleCheck1(event) {\n  if (document.getElementById(\"transpText\").value) {\n    transparentSearchEventHandler();\n  }\n}\n\n// ?? I believe this function is unused, and draw also maps to zoomEventHandler\n// it will be executed when Draw button is pressed and the plot will highlight those points that covers fixed percentage of point from the point obtained by mouse click\nfunction handleClick2(event){\n  shaping_column = \"Select\";\n  color_column = \"Select\";\n  myForm.searchText.value = 0;\n  myForm1.transpText.value = 0;\n  myForm1.opacityMatch.value = 0;\n  myForm1.opacityNoMatch.value = 0;\n  dropDown4.property( \"value\", \"Select\" );\n  dropDown.property( \"value\", \"Select\" );\n  highlighting(\"\", \"\", \"\");\n  return false;\n}\n\n// spectrum / log event\n// it will be executed when spectrum/log is checked\n// ?? Can we collapse transparentSearchEventHandler,3,4?\nfunction spectrumAndLogColoringEventHandler(event) {\n  let val_search = document.getElementById(\"searchText\").value;\n  let val_transp = document.getElementById(\"transpText\").value;\n  let val_opacityMatch = document.getElementById(\"opacityMatch\").value;\n  let val_opacityNoMatch = document.getElementById(\"opacityNoMatch\").value;\n  highlighting(val_search, val_transp, val_opacityMatch, val_opacityNoMatch);\n}\n\n// it will be executed when (?? draw and) zoom button is pressed and the plot will zoomed out according to the points obtained by mouse click event\nfunction zoomEventHandler(){\n  if (!document.getElementById('cbox3').checked) {\n    document.getElementById(\"zoomxy\").value = \"\"; // clear the textbox\n  }\n  let val_search = document.getElementById(\"searchText\").value;\n  let val_transp = document.getElementById(\"transpText\").value;\n  let val_opacityMatch = document.getElementById(\"opacityMatch\").value;\n  let val_opacityNoMatch = document.getElementById(\"opacityNoMatch\").value;\n  needZoom = true;\n  highlighting(val_search, val_transp, val_opacityMatch, val_opacityNoMatch);\n}\n\n\n// Checks the url query for name=value and extracts the value\nfunction getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n  results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nfunction linspace(start, end, n) {\n  var out = [];\n  var delta = (end - start) / (n - 1);\n  var i = 0;\n  while(i < (n - 1)) {\n    out.push(start + (i * delta));\n    i++;\n  }\n  out.push(end);\n  return out;\n}\n\n(function setEventHandlers() {\n  let zoomButton = document.getElementsByClassName('zoom-button')[0];\n  zoomButton.onclick = zoomEventHandler;\n\n  let colorOptions = document.getElementsByClassName('color-option');\n  for (i = 0; i < 2; i++) {\n    colorOptions[i].onclick = spectrumAndLogColoringEventHandler;\n  };\n\n  let searchExactMatchCheckbox = document.getElementsByClassName('search-exact-match')[0];\n  searchExactMatchCheckbox.onclick = searchExactMatchEventHandler;\n\n  let searchFormButton = document.getElementsByClassName('search-button')[0];\n  searchFormButton.addEventListener('click', (event) => {\n    event.preventDefault();\n    searchEventHandler();\n  });\n\n  let transparentSearchButton = document.getElementsByClassName('transparent-search-button')[0];\n  transparentSearchButton.addEventListener('click', (event) => {\n    event.preventDefault();\n    transparentSearchEventHandler();\n  });\n})()\n\nlet coordinatesx = [];\nlet coordinatesy = [];\n\n// provides different colored spectrum\nvar scale_d = {\n  'puOr11': ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n  'spectral8': ['#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#e6f598', '#abdda4', '#66c2a5', '#3288bd'],\n  'redBlackGreen': ['#ff0000', '#AA0000', '#550000', '#005500', '#00AA00', '#00ff00'],\n};\nlet scale = scale_d['spectral8'];\n\n// function for plotting\nfunction highlighting(val_search, val_transp, val_opacityMatch, val_opacityNoMatch) {\n\n  var svg, m1, m2;\n  var temp1 = [], temp2 = [], temp3 = [];\n  var dict1 = {};\n\n    // to remove the existing svg plot if any and clear side table\n    document.getElementById(\"demo3\").innerHTML = \"\";\n    document.getElementById(\"predicted_words\").innerHTML = \"\";\n    document.getElementById(\"frequent_words\").innerHTML = \"\";\n    d3.select(\"svg\").remove();\n    d3.select(\"table\").remove();\n\n    // function zoom() {\n    //  svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n    //    }\n\n    // the location of svg image will be determined\n    svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"width\"] + _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"margin\"].left + _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"margin\"].right)\n    .attr(\"height\", _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"height\"] + _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"margin\"].top + _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"margin\"].bottom)\n    .append(\"g\")\n    .attr(\"transform\",\"translate(\" + _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"margin\"].left + \",\" + _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"margin\"].top + \")\");\n\n    /* https://github.com/skokenes/D3-Lasso-Plugin\n    plugin also handles selected and possible settings */\n    // Lasso starts\n    var lasso_start = function() {\n      d3.select(\"table\").remove();\n      document.getElementById(\"demo3\").innerHTML = \"\";\n      lasso.items()\n            .attr(\"r\",3.5) // reset size\n            .style(\"fill\",null) // clear all of the fills (greys out)\n            .classed({\"not_possible\":true,\"selected\":false}); // style as not possible\n          };\n\n          var lasso_draw = function() {\n        // Style the possible dots\n        lasso.items().filter(function(d) {return d.possible===true})\n        .classed({\"not_possible\":false,\"possible\":true});\n\n        // Style the not possible dot\n        lasso.items().filter(function(d) {return d.possible===false})\n        .classed({\"not_possible\":true,\"possible\":false})\n        .style(\"stroke\", \"#000\");\n      };\n\n      var lasso_end = function() {\n        // Reset the color of all dots\n        lasso.items()\n        .style(\"fill\", function(d) { return color(d[color_column]); });\n\n        // Style the selected dots\n        lasso.items().filter(function(d) {return d.selected===true})\n        .classed({\"not_possible\":false,\"possible\":false})\n        .attr(\"r\",6.5);\n\n        // get values for table -> array inside a list\n        var zsx = lasso.items().filter(function(d) {return d.selected===true});\n        let x_values = [];\n        let y_values = [];\n        // adjust the x and y values\n        for (var i=0; i<zsx[0].length; i++) {\n          x_values.push(((((zsx[0][i].getBBox().x+6.5) * (x_max - x_min))/_modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"width\"] + x_min )));\n          y_values.push(((((zsx[0][i].getBBox().y+6.5) * (y_min - y_max))/_modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"height\"] + y_max)));\n        }\n        var selected_data=[], selected_data_indices=[];\n        // Compare every selected point to all points (tempX)\n        // in order to match coordinates with actual data\n        for (var ii=0;ii<x_values.length;ii++) {\n          console.log(\"lasso_end gathering selected data\");\n          console.log(temp1.length);\n          for (var jj=0;jj<temp1.length;jj++) {\n            x_values[ii] = +(x_values[ii].toFixed(3));\n            y_values[ii] = +(y_values[ii].toFixed(5));\n            if ( (x_values[ii] === +(temp1[jj].toFixed(3))) && (y_values[ii] === +(temp2[jj].toFixed(5))) ) {\n              let all_values = {};\n              for (var k=1;k<categories.length;k++) {\n                all_values[categories[k]] = (dict1[categories[k]][jj]);\n              }\n              if(searchdic(selected_data,all_values)==true){\n                selected_data.push(all_values);\n                selected_data_indices.push(jj);\n                break;\n              }\n            }\n          }\n        }\n        // render the table for the points selected by lasso\n        if (selected_data.length > 0) {\n          console.log(\"Rendering table...\");\n          console.log(selected_data);\n          console.log(columns);\n          console.log(x_values);\n          var peopleTable = Object(_modules_table_creator_js__WEBPACK_IMPORTED_MODULE_1__[\"tabulate\"])(selected_data, columns, x_values);\n          if (\"semantic_model\" in dicts && dicts[\"semantic_model\"] == \"true\") {\n            console.log(\"Predicting words...\");\n            Object(_modules_table_creator_js__WEBPACK_IMPORTED_MODULE_1__[\"classify\"])(selected_data_indices, vectorspace_2darray, weights_2darray, biases_1darray, vocab_1darray);\n            Object(_modules_table_creator_js__WEBPACK_IMPORTED_MODULE_1__[\"benchmark\"])(selected_data_indices, bow_2darray, vocab_1darray);\n          }\n        }\n\n        // Reset the style of the not selected dots (we made them 0.5 smaller)\n        lasso.items().filter(function(d) {return d.selected===false})\n        .classed({\"not_possible\":false,\"possible\":false})\n        .attr(\"r\",3)\n        .style(\"stroke\", \"#000\");\n      };\n\n    // Create the area where the lasso event can be triggered\n    var lasso_area = svg.append(\"rect\")\n    .attr(\"width\",_modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"width\"])\n    .attr(\"height\",_modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"height\"])\n    .style(\"opacity\",0);\n\n    // Define the lasso\n    var lasso = d3.lasso()\n        .closePathDistance(75) // max distance for the lasso loop to be closed\n        .closePathSelect(true) // can items be selected by closing the path?\n        .hoverSelect(true) // can items by selected by hovering over them?\n        .area(lasso_area) // area where the lasso can be started\n        .on(\"start\",lasso_start) // lasso start function\n        .on(\"draw\",lasso_draw) // lasso draw function\n        .on(\"end\",lasso_end); // lasso end function\n\n    // Init the lasso object on the svg:g that contains the dots\n    svg.call(lasso);\n\n    console.log('Loading main data, again') // load data\n    d3.tsv(dataset, function(error, data) {\n\n        // change string (from CSV) into number format\n        var numerics = {}, symbol = {};\n        //Omitting Select (0)\n        for(var i=1;i<categories.length;i++) {\n            // initialize the value for each category key to empty list\n            dict1[categories[i]] = [];\n            // initialize all categories as numeric\n            numerics[categories[i]] = 1;\n          }\n          let counter = 0;\n          data.forEach(function(d) {\n            // coerce the data to numbers\n            d.x = +d.x;\n            d[\"y\"] = +d[\"y\"];\n\n            for(var i=1;i<categories.length;i++){\n                // add every attribute of point to the {category:[val1,val2,...]}\n                dict1[categories[i]].push(d[categories[i]]);\n                // revoke a category's numerics status if find an entry has a non-Int or non-null value for that category\n                numerics[categories[i]] = numerics[categories[i]] && (d[categories[i]] == \"\" || d[categories[i]] == parseFloat(d[categories[i]]));\n              }\n            // fill the symbol dictionary with all possible values of the shaping column as keys\n            // value is the order of points\n            if (!(d[shaping_column] in symbol)) {\n              symbol[d[shaping_column]] = counter;\n              counter = counter + 1;\n            }\n            // push all x values, y values, and all category search values into temp1/2/3\n            temp1.push(d.x);\n            temp2.push(d[\"y\"]);\n            temp3.push(d[category_search]);\n          // console.log(d[\"z\"] == parseInt(d[\"z\"]));\n        });\n          console.log(numerics);\n          console.log(color_column);\n        // set color according to spectrum\n        if (numerics[color_column] && document.getElementById('cbox1').checked) {\n          console.log('using spectrum');\n            // take log if log checkbox checked\n            if (document.getElementById('cbox2').checked) {\n              console.log('using log');\n              m1 = (d3.min(data.map(function(d) {return Math.log(parseFloat(d[color_column])); })));\n              m2 = (d3.max(data.map(function(d) {return Math.log(parseFloat(d[color_column])); })));\n            } else{\n              console.log('not using log');\n              m1 = (d3.min(data.map(function(d) {return parseFloat(d[color_column])})));\n              m2 = (d3.max(data.map(function(d) {return parseFloat(d[color_column])})));\n            }\n\n            console.log(m1, m2);\n            m1 = Math.max(Number.MIN_VALUE, m1);\n            console.log(m1, m2);\n\n            color = d3.scale.linear()\n            .domain(linspace(m1, m2,scale.length))\n              //.domain(linspace(d3.min(data.map(function(d) {return parseInt(d[color_column])})), d3.max(data.map(function(d) {return parseInt(d[color_column])})),scale.length))\n              .range(scale);\n            } else {\n              console.log('not using spectrum');\n              color = d3.scale.ordinal().range(d3_category20_shuffled);\n            }\n\n        // don't want dots overlapping axis, so add in buffer to data domain\n        var zoom = getParameterByName('Zoom'); // unused, capitalized Z anyway as changed above\n\n        if (document.getElementById(\"cbox3\").checked==false) {\n          document.getElementById(\"zoomxy\").value = \"\";\n          zoomed = 0;\n          needZoom = false;\n          x_max = d3.max(data, xValue)+1;\n          x_min = d3.min(data, xValue)-1;\n          y_max = d3.max(data, yValue)+1;\n          y_min = d3.min(data, yValue)-1;\n        }\n\n        // if zoom is checked and conditions are satisfied\n        if (document.getElementById(\"cbox3\").checked==true  && needZoom == true && coordinatesx.length >= 2) {\n\n          x_max = xScale.invert(Math.max(coordinatesx[0], coordinatesx[1]))+1;\n          x_min = xScale.invert(Math.min(coordinatesx[0], coordinatesx[1]))-1;\n          y_max = yScale.invert(Math.min(coordinatesy[0], coordinatesy[1]))+1;\n          y_min = yScale.invert(Math.max(coordinatesy[0], coordinatesy[1]))-1;\n\n          console.log(x_max, x_min, y_max, y_min);\n          document.getElementById(\"zoomxy\").value = \"X:[\"+parseInt(x_min)+\", \"+parseInt(x_max)+\"] Y:[\"+parseInt(y_min)+\", \"+parseInt(y_max)+\"]\";\n\n          zoomed = 1;\n          needZoom = false;\n                // document.getElementById(\"cbox3\").checked = false;\n                /*\n                          zoom = zoom.substr(1, zoom.length-2);\n                          commaIndex = zoom.indexOf(',');\n                          x_min = parseFloat(zoom.substr(0, commaIndex));\n                          zoom = zoom.substr(commaIndex+1);\n                          commaIndex = zoom.indexOf(',');\n                          x_max = parseFloat(zoom.substr(0, commaIndex));\n                          zoom = zoom.substr(commaIndex+1);\n                          commaIndex = zoom.indexOf(',');\n                          y_min = parseFloat(zoom.substr(0, commaIndex));\n                          y_max = parseFloat(zoom.substr(commaIndex+1));\n                          */\n                        }\n                        xScale.domain([x_min, x_max]);\n                        yScale.domain([y_min, y_max]);\n\n        // xScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);\n        // yScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);\n\n        // x-axis\n        let cx = 0;\n        let cy = 0;\n        let ans = 0;\n\n        // draw the x-axis of plot\n        svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"height\"] + \")\")\n        .call(xAxis)\n        .append(\"text\")\n        .attr(\"class\", \"label\")\n        .attr(\"x\", _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"width\"])\n        .attr(\"y\", -6)\n        .style(\"text-anchor\", \"end\")\n        .text(\"\");\n\n        // draw the y-axis of plot\n        svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n        .append(\"text\")\n        .attr(\"class\", \"label\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"\");\n\n        // to identify the condition of transparent column values\n        if (transparent_column !== \"Select\" && val_transp !== \"\" && val_opacityNoMatch !== \"\") {\n          transparent_column = transparent_column.toString();\n            val_transp = val_transp.toString(); // ?? no to lower case here?\n          }\n          else {\n            val_transp = val_transp.toString();\n          }\n\n          var transpar = function(d) {\n            if (val_transp !== \"\" && typeof d != 'undefined') {\n                // if point's transp column value is equal to the value specified, return val_opacityMatch, else val_opacityNoMatch\n                var match;\n                if (document.getElementById('cbox6').checked) {\n                    // console.log(\"Using exact match\");\n                    match = d[transparent_column] == val_transp;\n                  } else {\n                    match = d[transparent_column] && (d[transparent_column].toLowerCase().indexOf(val_transp.toLowerCase()) > -1);\n                  }\n\n                  if (match){\n                    return parseFloat(val_opacityMatch);\n                  } else{\n                    return parseFloat(val_opacityNoMatch);\n                  }\n                }\n                else {\n                  return 1;\n                }\n              };\n\n        // searching according to the substring given and searching column\n        var searchFunc = function(d) {\n          if (typeof d[category_search] == 'undefined' ) {\n            return 1;\n          }\n            // noMatch truthy if not found\n            var noMatch;\n            if (document.getElementById('cbox5').checked) {\n              noMatch = d[category_search] != val_search;\n            } else {\n              noMatch = d[category_search].toLowerCase().indexOf(val_search.toLowerCase()) < 0\n              || val_search.length === 0;\n            }\n            return noMatch ? 1 : 2;\n          };\n\n          var searchFunc1 = function(d) {\n            if (typeof d == 'undefined' ) {\n              return 1;\n            }\n            // noMatch true if not found\n            var noMatch;\n            if (document.getElementById('cbox5').checked) {\n              noMatch = d != val_search;\n            } else {\n              noMatch = d.toLowerCase().indexOf(val_search.toLowerCase()) < 0\n              || val_search.length === 0;\n            }\n            return noMatch ? 1 : 2;\n          };\n\n          var searched_data = [], searched_data_indices = [], d_temp;\n          /* temp3 holds the value of every point for the search column */\n          for (var i=0;i<temp3.length;i++) {\n            // 0 if found val in this point, 1 if not found\n            if ( searchFunc1(temp3[i])-1 ) {\n              d_temp = {};\n                // enter all data into dictionary\n                for(var j=1;j<categories.length;j++) {\n                  d_temp[categories[j]] = dict1[categories[j]][i];\n                }\n                // only add to searched_data if not already in\n                if(searchdic(searched_data, d_temp) === true) {\n                  searched_data.push(d_temp);\n                  searched_data_indices.push(i);\n                }\n              }\n            }\n        // create the table\n        if ( val_search != \"\" && searched_data.length > 0) {\n          var peopleTable1 = Object(_modules_table_creator_js__WEBPACK_IMPORTED_MODULE_1__[\"tabulate\"])(searched_data, columns);\n          if (\"semantic_model\" in dicts && dicts[\"semantic_model\"] == \"true\") {\n            console.log(\"Predicting words...\");\n            Object(_modules_table_creator_js__WEBPACK_IMPORTED_MODULE_1__[\"classify\"])(searched_data_indices, vectorspace_2darray, weights_2darray, biases_1darray, vocab_1darray);\n            Object(_modules_table_creator_js__WEBPACK_IMPORTED_MODULE_1__[\"benchmark\"])(searched_data_indices, bow_2darray, vocab_1darray);\n          }\n        };\n\n        // determines the rotation of symbols that can be done\n        var sizes = {}\n        sizes[0] = [\"0\", \"90\", \"0\", \"0\"]\n        sizes[1] = [\"0\", \"45\", \"0\", \"0\"]\n        sizes[2] = [\"0\", \"90\", \"0\", \"0\"]\n        sizes[3] = [\"0\", \"45\", \"0\", \"0\"]\n        sizes[4] = [\"0\", \"90\", \"0\", \"0\"]\n        sizes[5] = [\"0\", \"0\", \"0\", \"0\"]\n        var symbols = [\"diamond\", \"cross\", \"triangle-up\", \"square\", \"triangle-down\",\"circle\"];\n\n        /*** BEGIN drawing dots ***/\n\n        // shaping of symbols according to the shaping column\n        if (shaping_column !== \"Select\" ) {\n          // color_column = shaping_column;\n          var points = svg.selectAll(\".dot\")\n          .data(data)\n          .enter();\n\n          points.append(\"path\")\n          .filter(function(d){ return (searchFunc(d) == 1); })\n          .attr(\"class\", \"point\")\n          .style(\"stroke\", \"#000\")\n          .style(\"stroke-width\", 1)\n          // .attr(\"d\", d3.svg.symbol().type(function(d) {return symbols[symbol[d[shaping_column]]%6];}).size( function(d) {return sizes[parseInt(symbol[d[shaping_column]]/6)%4];}))\n          .attr(\"d\", d3.svg.symbol().type(function(d) {return symbols[symbol[d[shaping_column]]%6];}).size(function(d) {return searchFunc(d)-1 ? 180:30;}))\n          .attr(\"transform\", function(d) { return \"translate(\" + xMap(d) + \",\" + yMap(d) + \") rotate(\" + sizes[parseInt(symbol[d[shaping_column]]%6)][parseInt(symbol[d[shaping_column]]/6)%4] + \")\"; })\n          .style(\"fill\", function(d) { return document.getElementById('cbox2').checked ? color(cValue2(d)) : color(cValue(d));})\n          .style(\"opacity\",function(d) { return transpar(d);})\n\n          .on(\"mouseover\", function(d) {\n            tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n            tooltip.html(\n              print_array(category_search_data, d))\n            .style(\"left\", 60 + \"px\")\n            .style(\"top\", 30 + \"px\");\n          })\n          .on(\"mouseout\", function(d) {\n            d3.select(this).attr(\"r\", function(d){ return searchFunc(d)-1 ? 7:3 ; })\n            .style(\"fill\", function(d) { return color(cValue(d));});\n            tooltip.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n          })\n          .on(\"click\", function(d) {\n            svg.append(\"text\")\n            .text(d[feature_column])\n            .attr(\"x\", (d3.event.pageX-50))\n            .attr(\"y\", (d3.event.pageY-35));\n          });\n\n          points.append(\"path\")\n          .filter(function(d){ return (searchFunc(d) == 2); })\n          .attr(\"class\", \"point\")\n          .style(\"stroke\", \"yellow\")\n          .style(\"stroke-width\", 2)\n          // .attr(\"d\", d3.svg.symbol().type(function(d) {return symbols[symbol[d[shaping_column]]%6];}).size( function(d) {return sizes[parseInt(symbol[d[shaping_column]]/6)%4];}))\n          .attr(\"d\", d3.svg.symbol().type(function(d) {return symbols[symbol[d[shaping_column]]%6];}).size(function(d) {return searchFunc(d)-1 ? 180:30;}))\n          .attr(\"transform\", function(d) { return \"translate(\" + xMap(d) + \",\" + yMap(d) + \") rotate(\" + sizes[parseInt(symbol[d[shaping_column]]%6)][parseInt(symbol[d[shaping_column]]/6)%4] + \")\"; })\n          .style(\"fill\", function(d) { return document.getElementById('cbox2').checked ? color(cValue2(d)) : color(cValue(d));})\n          .style(\"opacity\",function(d) { return transpar(d);})\n\n          .on(\"mouseover\", function(d) {\n            tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n            tooltip.html(\n              print_array(category_search_data, d))\n            .style(\"left\", 60 + \"px\")\n            .style(\"top\", 30 + \"px\");\n          })\n          .on(\"mouseout\", function(d) {\n            d3.select(this).attr(\"r\", function(d){ return searchFunc(d)-1 ? 7:3 ; })\n            .style(\"fill\", function(d) { return color(cValue(d));});\n            tooltip.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n          })\n          .on(\"click\", function(d) {\n            svg.append(\"text\")\n            .text(d[feature_column])\n            .attr(\"x\", (d3.event.pageX-50))\n            .attr(\"y\", (d3.event.pageY-35));\n          });\n        } else {\n          // draw dots\n          let marked = {}\n          var points = svg.selectAll(\".dot\")\n          .data(data)\n          .enter();\n\n          points.append(\"circle\")\n          .filter(function(d){ return (searchFunc(d) == 1); })\n          .attr(\"class\", \"dot\")\n          .attr(\"r\", 3)\n          .style(\"stroke\", \"#000\")\n          .style(\"stroke-width\", 1)\n          .attr(\"cx\", xMap)\n          .attr(\"cy\", yMap)\n          .style(\"fill\", function(d) { return document.getElementById('cbox2').checked ? color(cValue2(d)) : color(cValue(d));})\n          .style(\"opacity\",function(d) { return transpar(d);})\n\n          .on(\"mouseover\", function(d) {\n            tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n            tooltip.html(print_array(category_search_data, d))\n            .style(\"left\", 60 + \"px\")\n            .style(\"top\", 30 + \"px\");\n          })\n\n          .on(\"mouseout\", function(d) {\n            tooltip.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n          })\n\n          .on(\"click\", function(d) {\n            if (!([d3.event.pageX, d3.event.pageY] in marked)) {\n              marked[[d3.event.pageX, d3.event.pageY]] = true;\n              marked[[d3.event.pageX-1, d3.event.pageY-1]] = true;\n              marked[[d3.event.pageX+1, d3.event.pageY+1]] = true;\n              marked[[d3.event.pageX-1, d3.event.pageY+1]] = true;\n              marked[[d3.event.pageX+1, d3.event.pageY-1]] = true;\n              marked[[d3.event.pageX+2, d3.event.pageY-2]] = true;\n              marked[[d3.event.pageX-2, d3.event.pageY-2]] = true;\n              marked[[d3.event.pageX-2, d3.event.pageY+2]] = true;\n              marked[[d3.event.pageX+2, d3.event.pageY+2]] = true;\n              svg.append(\"text\")\n              .text(d[feature_column])\n              .attr(\"x\", (d3.event.pageX-50))\n              .attr(\"y\", (d3.event.pageY-35));\n                      /*\n                      tooltip1.transition()\n                         .attr(\"class\", \"tooltip1\")\n                               .style(\"opacity\", 1);\n\n                      tooltip1.html(\"<b>\"+d[feature_column]+\"</b>\")\n                               .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                               .style(\"top\", (d3.event.pageY - 10) + \"px\");\n                               */\n                             }\n                           });\n          points.append(\"circle\")\n          .filter(function(d){ return (searchFunc(d) == 2); })\n          .attr(\"class\", \"dot\")\n          .attr(\"r\", 7)\n          .style(\"stroke\", \"yellow\")\n          .style(\"stroke-width\", 2)\n          .attr(\"cx\", xMap)\n          .attr(\"cy\", yMap)\n          .style(\"fill\", function(d) { return document.getElementById('cbox2').checked ? color(cValue2(d)) : color(cValue(d));})\n          .style(\"opacity\",function(d) { return transpar(d);})\n            // jann: here is the mouseover display\n            .on(\"mouseover\", function(d) {\n              tooltip.transition()\n              .duration(200)\n              .style(\"opacity\", 1);\n              tooltip.html(\n                print_array(category_search_data, d))\n              .style(\"left\", 60 + \"px\")\n              .style(\"top\", 30 + \"px\");\n            })\n\n            .on(\"mouseout\", function(d) {\n              tooltip.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            })\n\n            .on(\"click\", function(d) {\n              if (!([d3.event.pageX, d3.event.pageY] in marked)){\n                marked[[d3.event.pageX, d3.event.pageY]] = true;\n                marked[[d3.event.pageX-1, d3.event.pageY-1]] = true;\n                marked[[d3.event.pageX+1, d3.event.pageY+1]] = true;\n                marked[[d3.event.pageX-1, d3.event.pageY+1]] = true;\n                marked[[d3.event.pageX+1, d3.event.pageY-1]] = true;\n                marked[[d3.event.pageX+2, d3.event.pageY-2]] = true;\n                marked[[d3.event.pageX-2, d3.event.pageY-2]] = true;\n                marked[[d3.event.pageX-2, d3.event.pageY+2]] = true;\n                marked[[d3.event.pageX+2, d3.event.pageY+2]] = true;\n                svg.append(\"text\")\n                .text(d[feature_column])\n                .attr(\"x\", (d3.event.pageX-50))\n                .attr(\"y\", (d3.event.pageY-35));\n              }\n            });\n          }\n          /*** END drawing dots ***/\n\n        // the event to call on click event\n        svg.on(\"click\",function() {\n          // svg.select(\"#myText\").remove();\n\n          tooltip1.style(\"opacity\", 0);\n          var coordinates1 = d3.mouse(this);\n          coordinatesx.unshift(coordinates1[0]);\n          coordinatesy.unshift(coordinates1[1]);\n          console.log(coordinatesx, coordinatesy);\n        })\n\n        /* can move up into the if/else, but more clear to separate functionality */\n        if (shaping_column !== \"Select\" ) {\n          lasso.items(d3.selectAll(\".dot\"));\n        } else {\n          lasso.items(d3.selectAll(\".dot\"));\n        }\n\n        var len = color.domain().length;\n        // if spectrum\n        if (numerics[color_column] && document.getElementById('cbox1').checked) {\n\n          if (document.getElementById('cbox2').checked) {\n            m1 = (d3.min(data.map(function(d) {return Math.log(parseFloat(d[color_column])); })));\n            m2 = (d3.max(data.map(function(d) {return Math.log(parseFloat(d[color_column])); })));\n          } else {\n            m1 = (d3.min(data.map(function(d) {return parseFloat(d[color_column])})));\n            m2 = (d3.max(data.map(function(d) {return parseFloat(d[color_column])})));\n\n          }\n          console.log(m1, m2);\n          m1 = Math.max(Number.MIN_VALUE, m1);\n          console.log(m1, m2);\n\n          var legend = svg.selectAll(\".legend\")\n          .data(color.domain())\n          .enter().append(\"g\")\n          .attr(\"class\", \"legend\");\n\n          var gradient = legend.append('defs')\n          .append('linearGradient')\n          .attr('id', 'gradient')\n                    .attr('x1', '0%') // bottom\n                    .attr('y1', '100%')\n                    .attr('x2', '0%') // to top\n                    .attr('y2', '0%')\n                    .attr('spreadMethod', 'pad');\n\n                    var pct = linspace(0, 100, scale.length).map(function(d) {\n                      return Math.round(d) + '%';\n                    });\n\n                    var colourPct = d3.zip(pct, scale);\n                    colourPct.forEach(function(d) {\n                      gradient.append('stop')\n                      .attr('offset', d[0])\n                      .attr('stop-color', d[1])\n                      .attr('stop-opacity', 1);\n                    });\n\n                    legend.append('rect')\n                    .attr('x1', 0)\n                    .attr('y1', 0)\n                    .attr('width', 18)\n                    .attr('height', 150)\n                    .attr(\"transform\", \"translate(\" + 582 + \", 0)\")\n                    .style('fill', 'url(#gradient)');\n\n                    var legendScale = d3.scale.linear()\n                    .domain([m1, m2])\n                    .range([150, 0]);\n\n                    var legendAxis = d3.svg.axis()\n                    .scale(legendScale)\n                    .orient(\"right\")\n                // .tickValues([m1, m2])\n                .ticks(10);\n\n                legend.append(\"g\")\n                .attr(\"class\", \"legend axis\")\n                .attr(\"transform\", \"translate(\" + 600 + \", 0)\")\n                .call(legendAxis);\n        } else { // no spectrum\n          console.log(Object);\n          var keys = Object.keys(symbol);\n          let leng = keys.length;\n          if (leng<20 && shaping_column != \"Select\") {\n              // draw legend\n                // ?? Not sure why, but this legend appears not to show\n                var legend = svg.selectAll(\".legend\")\n                .data(keys)\n                .enter().append(\"g\");\n                    // .attr(\"class\", \"legend\");\n                    // .attr(\"transform\", function(d, i) { return \"translate(30,\" + i * 20 + \")\"; });\n                    console.log(keys);\n                    console.log(shaping_column);\n                    console.log(symbol);\n                    console.log(symbols);\n                // draw legend colored rectangles\n                legend.append(\"path\")\n                    // .attr(\"d\", d3.svg.symbol().type(function(d) {return symbols[symbol[d]%6];}).size(function(d) {return sizes[parseInt(symbol[d]/6)%3];}))\n                    .attr(\"d\", d3.svg.symbol().type(function(d) {return symbols[symbol[d]%6];}))\n                    .attr(\"x\", _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"width\"] + 0)\n                    .attr(\"width\", 18)\n                    .attr(\"height\", 18)\n                    // .attr(\"transform\", function(d, i) { return \"translate(\" + 20 + \",\" + i*20 + \")\"; });\n                    .attr(\"transform\", function(d, i) { return \"translate(\" + 20 + \",\" + i*20 + \") rotate(\" + sizes[parseInt(symbol[d]%6)][parseInt(symbol[d]/6)%4] + \")\"; });\n                // draw legend text\n                legend.append(\"text\")\n                    // .attr(\"x\", 100 + 0)\n                    // .attr(\"y\", 4)\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"begin\")\n                    .text(function(d) { return d;})\n                    .attr(\"transform\", function(d, i) { return \"translate(30,\" + i * 20 + \")\"; });\n                  }\n\n                  if(len <= 30 && color_column != \"Select\") {\n\n                // draw legend\n                var legend = svg.selectAll(\".legend\")\n                .data(color.domain())\n                .enter().append(\"g\")\n                .attr(\"class\", \"legend\")\n                .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n                // draw legend colored rectangles\n                legend.append(\"rect\")\n                .attr(\"x\", _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"width\"] + 6)\n                .attr(\"width\", 18)\n                .attr(\"height\", 18)\n                .style(\"fill\", color);\n\n                // draw legend text\n                legend.append(\"text\")\n                .attr(\"x\", _modules_utilities_js__WEBPACK_IMPORTED_MODULE_0__[\"width\"] + 0)\n                .attr(\"y\", 9)\n                .attr(\"dy\", \".35em\")\n                .style(\"text-anchor\", \"end\")\n                .text(function(d) { return d;});\n              }\n            };\n    }); // end load data\n} // end highlighting//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ }),

/***/ "./src/modules/table_creator.js":
/*!**************************************!*\
  !*** ./src/modules/table_creator.js ***!
  \**************************************/
/*! exports provided: classify, benchmark, tabulate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"classify\", function() { return classify; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"benchmark\", function() { return benchmark; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tabulate\", function() { return tabulate; });\n// ****************************\n// Create Table functionality\n// ****************************\n\n// Utility function used for predicting words in semantic setting\n// Source: https://stackoverflow.com/a/11792230/7100714\nfunction findIndicesOfMax(inp, count) {\n  let outp = new Array();\n  for (let i = 0; i < inp.length; i++) {\n    outp.push(i);\n    if (outp.length > count) {\n      outp.sort((a, b) => (inp[b] - inp[a]));\n      outp.pop();\n    }\n  }\n  return outp;\n}\n\nfunction classify (indices, vs_source, weights_source, biases_source, vocab_source) {\n  let sum_vectors = vs_source[indices[0]];\n  for (i=1; i < indices.length; i++) {\n    sum_vectors = math.add(sum_vectors, vs_source[indices[i]]);\n  }\n  let avg_vector = sum_vectors.map((x) =>  ( x / indices.length ));\n  let mul = math.multiply(avg_vector, weights_source);\n  let add = math.add(mul, biases_source);\n  // get indices of 10 greatest elements\n  let topIndices = findIndicesOfMax(add, 10);\n  console.log(\"Top predicted vocab words:\");\n  let strbuilder = \"Predicted words:\";\n  for (i=0; i<10; i++) {\n    console.log((i+1) + \": \" + vocab_source[topIndices[i]]);\n    strbuilder += \" \" + vocab_source[topIndices[i]] + \",\";\n  }\n  document.getElementById(\"predicted_words\").innerHTML = strbuilder.slice(0, -1);\n};\n\nfunction benchmark (indices, bow_source, vocab_source) { // may need to adjust\n  var num_indices = indices.length;\n  var vocab_freq = bow_source[indices[0]];\n  for (i=1; i < num_indices; i++) {\n    vocab_freq = math.add(vocab_freq, bow_source[indices[i]]);\n  }\n  // get indices of 10 greatest elements\n  var topIndices = findIndicesOfMax(vocab_freq, 10);\n  console.log(\"Most frequent words:\");\n  var strbuilder = \"Most frequent words:\";\n  for (i=0; i<10; i++) {\n    console.log((i+1) + \": \" + vocab_source[topIndices[i]]);\n    strbuilder += \" \" + vocab_source[topIndices[i]] + \",\";\n  }\n  document.getElementById(\"frequent_words\").innerHTML = strbuilder.slice(0, -1);\n};\n\n// displays the summary in tabular form\nfunction tabulate (data_tab, columns) {\n  let table = d3.select(\"body\").append(\"table\").attr(\"class\", \"select3\"),\n      thead = table.append(\"thead\"),\n      tbody = table.append(\"tbody\");\n\n  // append the header row\n  thead.append(\"tr\")\n       .selectAll(\"th\")\n       .data(columns)\n       .enter()\n       .append(\"th\")\n       .text((column) => (column ));\n\n  // create a row for each object in the data\n  let rows = tbody.selectAll(\"tr\")\n                  .data(data_tab)\n                  .enter()\n                  .append(\"tr\");\n\n  // create a cell in each row for each column\n  let cells = rows.selectAll(\"td\")\n                  .data((row) => {\n                    return columns.map((column) => {\n                      return {column: column, value: row[column]};\n                    });\n                  })\n                  .enter()\n                  .append(\"td\")\n                  .attr(\"style\", \"font-family: Courier\") // sets the font style\n                  .html((d) => ( d.value ) );\n\n  /*\n    crossfilter dimensions and group by\n    http://animateddata.co.uk/articles/crossfilter/\n  */\n  let output = \"\";\n  let cf = crossfilter(data_tab);\n  /* crossfilter currently only supports up to 32 columns) */\n  for (var i=0;i<columns.length && i<32;i++) {\n    let byParty = cf.dimension((party) => ( party[columns[i]] ));\n    output = output + \"<b>\" + columns[i] + \"</b>\" + \"<br>\";\n    var groupByParty = byParty.group();\n    groupByParty.top(5).forEach(function(p, i) {\n      output = output + p.key + \": \" + p.value + \"<br>\";\n      console.log(p.key + \": \" + p.value);\n    });\n    output = output + \"<br>\";\n  }\n  // side table\n  document.getElementById(\"demo3\").innerHTML = output;\n  return table;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy90YWJsZV9jcmVhdG9yLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvdGFibGVfY3JlYXRvci5qcz85ZTQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbi8vIENyZWF0ZSBUYWJsZSBmdW5jdGlvbmFsaXR5XG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbi8vIFV0aWxpdHkgZnVuY3Rpb24gdXNlZCBmb3IgcHJlZGljdGluZyB3b3JkcyBpbiBzZW1hbnRpYyBzZXR0aW5nXG4vLyBTb3VyY2U6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xMTc5MjIzMC83MTAwNzE0XG5mdW5jdGlvbiBmaW5kSW5kaWNlc09mTWF4KGlucCwgY291bnQpIHtcbiAgbGV0IG91dHAgPSBuZXcgQXJyYXkoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnAubGVuZ3RoOyBpKyspIHtcbiAgICBvdXRwLnB1c2goaSk7XG4gICAgaWYgKG91dHAubGVuZ3RoID4gY291bnQpIHtcbiAgICAgIG91dHAuc29ydCgoYSwgYikgPT4gKGlucFtiXSAtIGlucFthXSkpO1xuICAgICAgb3V0cC5wb3AoKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG91dHA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGFzc2lmeSAoaW5kaWNlcywgdnNfc291cmNlLCB3ZWlnaHRzX3NvdXJjZSwgYmlhc2VzX3NvdXJjZSwgdm9jYWJfc291cmNlKSB7XG4gIGxldCBzdW1fdmVjdG9ycyA9IHZzX3NvdXJjZVtpbmRpY2VzWzBdXTtcbiAgZm9yIChpPTE7IGkgPCBpbmRpY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgc3VtX3ZlY3RvcnMgPSBtYXRoLmFkZChzdW1fdmVjdG9ycywgdnNfc291cmNlW2luZGljZXNbaV1dKTtcbiAgfVxuICBsZXQgYXZnX3ZlY3RvciA9IHN1bV92ZWN0b3JzLm1hcCgoeCkgPT4gICggeCAvIGluZGljZXMubGVuZ3RoICkpO1xuICBsZXQgbXVsID0gbWF0aC5tdWx0aXBseShhdmdfdmVjdG9yLCB3ZWlnaHRzX3NvdXJjZSk7XG4gIGxldCBhZGQgPSBtYXRoLmFkZChtdWwsIGJpYXNlc19zb3VyY2UpO1xuICAvLyBnZXQgaW5kaWNlcyBvZiAxMCBncmVhdGVzdCBlbGVtZW50c1xuICBsZXQgdG9wSW5kaWNlcyA9IGZpbmRJbmRpY2VzT2ZNYXgoYWRkLCAxMCk7XG4gIGNvbnNvbGUubG9nKFwiVG9wIHByZWRpY3RlZCB2b2NhYiB3b3JkczpcIik7XG4gIGxldCBzdHJidWlsZGVyID0gXCJQcmVkaWN0ZWQgd29yZHM6XCI7XG4gIGZvciAoaT0wOyBpPDEwOyBpKyspIHtcbiAgICBjb25zb2xlLmxvZygoaSsxKSArIFwiOiBcIiArIHZvY2FiX3NvdXJjZVt0b3BJbmRpY2VzW2ldXSk7XG4gICAgc3RyYnVpbGRlciArPSBcIiBcIiArIHZvY2FiX3NvdXJjZVt0b3BJbmRpY2VzW2ldXSArIFwiLFwiO1xuICB9XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJlZGljdGVkX3dvcmRzXCIpLmlubmVySFRNTCA9IHN0cmJ1aWxkZXIuc2xpY2UoMCwgLTEpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGJlbmNobWFyayAoaW5kaWNlcywgYm93X3NvdXJjZSwgdm9jYWJfc291cmNlKSB7IC8vIG1heSBuZWVkIHRvIGFkanVzdFxuICB2YXIgbnVtX2luZGljZXMgPSBpbmRpY2VzLmxlbmd0aDtcbiAgdmFyIHZvY2FiX2ZyZXEgPSBib3dfc291cmNlW2luZGljZXNbMF1dO1xuICBmb3IgKGk9MTsgaSA8IG51bV9pbmRpY2VzOyBpKyspIHtcbiAgICB2b2NhYl9mcmVxID0gbWF0aC5hZGQodm9jYWJfZnJlcSwgYm93X3NvdXJjZVtpbmRpY2VzW2ldXSk7XG4gIH1cbiAgLy8gZ2V0IGluZGljZXMgb2YgMTAgZ3JlYXRlc3QgZWxlbWVudHNcbiAgdmFyIHRvcEluZGljZXMgPSBmaW5kSW5kaWNlc09mTWF4KHZvY2FiX2ZyZXEsIDEwKTtcbiAgY29uc29sZS5sb2coXCJNb3N0IGZyZXF1ZW50IHdvcmRzOlwiKTtcbiAgdmFyIHN0cmJ1aWxkZXIgPSBcIk1vc3QgZnJlcXVlbnQgd29yZHM6XCI7XG4gIGZvciAoaT0wOyBpPDEwOyBpKyspIHtcbiAgICBjb25zb2xlLmxvZygoaSsxKSArIFwiOiBcIiArIHZvY2FiX3NvdXJjZVt0b3BJbmRpY2VzW2ldXSk7XG4gICAgc3RyYnVpbGRlciArPSBcIiBcIiArIHZvY2FiX3NvdXJjZVt0b3BJbmRpY2VzW2ldXSArIFwiLFwiO1xuICB9XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZnJlcXVlbnRfd29yZHNcIikuaW5uZXJIVE1MID0gc3RyYnVpbGRlci5zbGljZSgwLCAtMSk7XG59O1xuXG4vLyBkaXNwbGF5cyB0aGUgc3VtbWFyeSBpbiB0YWJ1bGFyIGZvcm1cbmV4cG9ydCBmdW5jdGlvbiB0YWJ1bGF0ZSAoZGF0YV90YWIsIGNvbHVtbnMpIHtcbiAgbGV0IHRhYmxlID0gZDMuc2VsZWN0KFwiYm9keVwiKS5hcHBlbmQoXCJ0YWJsZVwiKS5hdHRyKFwiY2xhc3NcIiwgXCJzZWxlY3QzXCIpLFxuICAgICAgdGhlYWQgPSB0YWJsZS5hcHBlbmQoXCJ0aGVhZFwiKSxcbiAgICAgIHRib2R5ID0gdGFibGUuYXBwZW5kKFwidGJvZHlcIik7XG5cbiAgLy8gYXBwZW5kIHRoZSBoZWFkZXIgcm93XG4gIHRoZWFkLmFwcGVuZChcInRyXCIpXG4gICAgICAgLnNlbGVjdEFsbChcInRoXCIpXG4gICAgICAgLmRhdGEoY29sdW1ucylcbiAgICAgICAuZW50ZXIoKVxuICAgICAgIC5hcHBlbmQoXCJ0aFwiKVxuICAgICAgIC50ZXh0KChjb2x1bW4pID0+IChjb2x1bW4gKSk7XG5cbiAgLy8gY3JlYXRlIGEgcm93IGZvciBlYWNoIG9iamVjdCBpbiB0aGUgZGF0YVxuICBsZXQgcm93cyA9IHRib2R5LnNlbGVjdEFsbChcInRyXCIpXG4gICAgICAgICAgICAgICAgICAuZGF0YShkYXRhX3RhYilcbiAgICAgICAgICAgICAgICAgIC5lbnRlcigpXG4gICAgICAgICAgICAgICAgICAuYXBwZW5kKFwidHJcIik7XG5cbiAgLy8gY3JlYXRlIGEgY2VsbCBpbiBlYWNoIHJvdyBmb3IgZWFjaCBjb2x1bW5cbiAgbGV0IGNlbGxzID0gcm93cy5zZWxlY3RBbGwoXCJ0ZFwiKVxuICAgICAgICAgICAgICAgICAgLmRhdGEoKHJvdykgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29sdW1ucy5tYXAoKGNvbHVtbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7Y29sdW1uOiBjb2x1bW4sIHZhbHVlOiByb3dbY29sdW1uXX07XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgIC5lbnRlcigpXG4gICAgICAgICAgICAgICAgICAuYXBwZW5kKFwidGRcIilcbiAgICAgICAgICAgICAgICAgIC5hdHRyKFwic3R5bGVcIiwgXCJmb250LWZhbWlseTogQ291cmllclwiKSAvLyBzZXRzIHRoZSBmb250IHN0eWxlXG4gICAgICAgICAgICAgICAgICAuaHRtbCgoZCkgPT4gKCBkLnZhbHVlICkgKTtcblxuICAvKlxuICAgIGNyb3NzZmlsdGVyIGRpbWVuc2lvbnMgYW5kIGdyb3VwIGJ5XG4gICAgaHR0cDovL2FuaW1hdGVkZGF0YS5jby51ay9hcnRpY2xlcy9jcm9zc2ZpbHRlci9cbiAgKi9cbiAgbGV0IG91dHB1dCA9IFwiXCI7XG4gIGxldCBjZiA9IGNyb3NzZmlsdGVyKGRhdGFfdGFiKTtcbiAgLyogY3Jvc3NmaWx0ZXIgY3VycmVudGx5IG9ubHkgc3VwcG9ydHMgdXAgdG8gMzIgY29sdW1ucykgKi9cbiAgZm9yICh2YXIgaT0wO2k8Y29sdW1ucy5sZW5ndGggJiYgaTwzMjtpKyspIHtcbiAgICBsZXQgYnlQYXJ0eSA9IGNmLmRpbWVuc2lvbigocGFydHkpID0+ICggcGFydHlbY29sdW1uc1tpXV0gKSk7XG4gICAgb3V0cHV0ID0gb3V0cHV0ICsgXCI8Yj5cIiArIGNvbHVtbnNbaV0gKyBcIjwvYj5cIiArIFwiPGJyPlwiO1xuICAgIHZhciBncm91cEJ5UGFydHkgPSBieVBhcnR5Lmdyb3VwKCk7XG4gICAgZ3JvdXBCeVBhcnR5LnRvcCg1KS5mb3JFYWNoKGZ1bmN0aW9uKHAsIGkpIHtcbiAgICAgIG91dHB1dCA9IG91dHB1dCArIHAua2V5ICsgXCI6IFwiICsgcC52YWx1ZSArIFwiPGJyPlwiO1xuICAgICAgY29uc29sZS5sb2cocC5rZXkgKyBcIjogXCIgKyBwLnZhbHVlKTtcbiAgICB9KTtcbiAgICBvdXRwdXQgPSBvdXRwdXQgKyBcIjxicj5cIjtcbiAgfVxuICAvLyBzaWRlIHRhYmxlXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGVtbzNcIikuaW5uZXJIVE1MID0gb3V0cHV0O1xuICByZXR1cm4gdGFibGU7XG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/table_creator.js\n");

/***/ }),

/***/ "./src/modules/utilities.js":
/*!**********************************!*\
  !*** ./src/modules/utilities.js ***!
  \**********************************/
/*! exports provided: margin, width, height */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"margin\", function() { return margin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"width\", function() { return width; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"height\", function() { return height; });\n// TODO - Implement using ES6 module system, but want to ship quickly rn, so keeping utils gobally available\n\n// The location of svg plot is determined by the following margins\n// let plotDimensions = {\n//   margin: { top: 90, right: 40, bottom: 40, left: 40 },\n//   get width() { return 700 - this.margin.left - this.margin.right },\n//   get height() { return 750 - this.margin.top - this.margin.bottom }\n// };\n\n// Hardcoded values\nconst margin = { top: 90, right: 40, bottom: 40, left: 40 };\nconst width = 700 - margin.left - margin.right;\nconst height = 750 - margin.top - margin.bottom;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy91dGlsaXRpZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy91dGlsaXRpZXMuanM/OTc2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPIC0gSW1wbGVtZW50IHVzaW5nIEVTNiBtb2R1bGUgc3lzdGVtLCBidXQgd2FudCB0byBzaGlwIHF1aWNrbHkgcm4sIHNvIGtlZXBpbmcgdXRpbHMgZ29iYWxseSBhdmFpbGFibGVcblxuLy8gVGhlIGxvY2F0aW9uIG9mIHN2ZyBwbG90IGlzIGRldGVybWluZWQgYnkgdGhlIGZvbGxvd2luZyBtYXJnaW5zXG4vLyBsZXQgcGxvdERpbWVuc2lvbnMgPSB7XG4vLyAgIG1hcmdpbjogeyB0b3A6IDkwLCByaWdodDogNDAsIGJvdHRvbTogNDAsIGxlZnQ6IDQwIH0sXG4vLyAgIGdldCB3aWR0aCgpIHsgcmV0dXJuIDcwMCAtIHRoaXMubWFyZ2luLmxlZnQgLSB0aGlzLm1hcmdpbi5yaWdodCB9LFxuLy8gICBnZXQgaGVpZ2h0KCkgeyByZXR1cm4gNzUwIC0gdGhpcy5tYXJnaW4udG9wIC0gdGhpcy5tYXJnaW4uYm90dG9tIH1cbi8vIH07XG5cbi8vIEhhcmRjb2RlZCB2YWx1ZXNcbmV4cG9ydCBjb25zdCBtYXJnaW4gPSB7IHRvcDogOTAsIHJpZ2h0OiA0MCwgYm90dG9tOiA0MCwgbGVmdDogNDAgfTtcbmV4cG9ydCBjb25zdCB3aWR0aCA9IDcwMCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0O1xuZXhwb3J0IGNvbnN0IGhlaWdodCA9IDc1MCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/modules/utilities.js\n");

/***/ })

/******/ });